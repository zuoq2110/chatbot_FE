import React, { useState } from 'react';
import { FiMessageCircle, FiBook, FiHelpCircle, FiClock, FiDollarSign, FiBarChart2 } from 'react-icons/fi';
import UsageStats from './UsageStats';

const WelcomeScreen = ({ onSendMessage, user, welcomeMessage }) => {
  const [showUsageStats, setShowUsageStats] = useState(false);

  const quickActions = [
    {
      icon: FiBook,
      title: 'Quy ƒë·ªãnh h·ªçc t·∫≠p',
      description: 'T√¨m hi·ªÉu v·ªÅ c√°c quy ƒë·ªãnh v√† ch√≠nh s√°ch h·ªçc t·∫≠p t·∫°i KMA',
      query: 'Cho t√¥i bi·∫øt v·ªÅ quy ƒë·ªãnh h·ªçc t·∫≠p t·∫°i KMA'
    },
    {
      icon: FiClock,
      title: 'L·ªãch thi v√† l·ªãch h·ªçc',
      description: 'Xem l·ªãch thi, l·ªãch h·ªçc v√† th·ªùi gian bi·ªÉu',
      query: 'L·ªãch thi cu·ªëi k·ª≥ nh∆∞ th·∫ø n√†o?'
    },
    {
      icon: FiDollarSign,
      title: 'H·ªçc ph√≠',
      description: 'Th√¥ng tin v·ªÅ h·ªçc ph√≠ v√† c√°c kho·∫£n ph√≠ kh√°c',
      query: 'H·ªçc ph√≠ c·ªßa KMA l√† bao nhi√™u?'
    },
    {
      icon: FiHelpCircle,
      title: 'H·ªèi ƒë√°p chung',
      description: 'C√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p v·ªÅ KMA',
      query: 'T√¥i mu·ªën h·ªèi v·ªÅ KMA'
    }
  ];

  return (
    <div className="flex-1 flex flex-col items-center justify-center p-4 pt-8 mt-4">
      {/* Welcome message */}
      <div className="text-center mb-6 lg:mb-8 mt-2">
        <div className="w-16 h-16 lg:w-20 lg:h-20 mx-auto mb-3 lg:mb-4 bg-gradient-to-r from-red-500 to-red-600 rounded-full flex items-center justify-center animate-bounce-gentle">
          <FiMessageCircle className="w-8 h-8 lg:w-10 lg:h-10 text-white" />
        </div>
        
        <h2 className="text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-2">
          Ch√†o m·ª´ng ƒë·∫øn v·ªõi KMA Chatbot!
        </h2>
        
        <p className="text-sm sm:text-base lg:text-lg text-gray-600 max-w-xl lg:max-w-2xl mx-auto px-2">
          T√¥i l√† tr·ª£ l√Ω ·∫£o th√¥ng minh, s·∫µn s√†ng h·ªó tr·ª£ b·∫°n gi·∫£i ƒë√°p c√°c th·∫Øc m·∫Øc v·ªÅ 
          H·ªçc vi·ªán K·ªπ thu·∫≠t M·∫≠t m√£. H√£y b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán!
        </p>
      </div>

      {/* Quick actions */}
      <div className="w-full max-w-6xl mb-4 lg:mb-6">
        <h3 className="text-lg sm:text-xl font-semibold text-gray-900 mb-3 lg:mb-4 text-center">
          B·∫°n c√≥ th·ªÉ h·ªèi t√¥i v·ªÅ:
        </h3>
        
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-4">
          {quickActions.map((action, index) => (
            <button
              key={index}
              onClick={() => onSendMessage(action.query)}
              className="p-4 lg:p-6 bg-white rounded-lg lg:rounded-xl border border-gray-200 hover:border-red-300 hover:shadow-lg transition-all duration-300 text-left group h-full"
            >
              <div className="flex flex-col sm:flex-row lg:flex-col items-start space-y-2 sm:space-y-0 sm:space-x-3 lg:space-x-0 lg:space-y-3">
                <div className="flex-shrink-0 w-10 h-10 lg:w-12 lg:h-12 bg-red-50 rounded-lg flex items-center justify-center group-hover:bg-red-100 transition-colors duration-200">
                  <action.icon className="w-5 h-5 lg:w-6 lg:h-6 text-red-600" />
                </div>
                
                <div className="flex-1 min-w-0">
                  <h4 className="text-base lg:text-lg font-semibold text-gray-900 mb-1 lg:mb-2 group-hover:text-red-600 transition-colors duration-200 leading-tight">
                    {action.title}
                  </h4>
                  <p className="text-gray-600 text-xs sm:text-sm lg:text-sm leading-relaxed line-clamp-2">
                    {action.description}
                  </p>
                </div>
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* Sample questions */}
      <div className="w-full max-w-4xl mb-4">
        <h4 className="text-base sm:text-lg font-medium text-gray-700 mb-2 lg:mb-3 text-center">
          Ho·∫∑c th·ª≠ nh·ªØng c√¢u h·ªèi m·∫´u:
        </h4>
        
        <div className="flex flex-wrap justify-center gap-2">
          {[
            'ƒêi·ªÅu ki·ªán t·ªët nghi·ªáp l√† g√¨?',
            'C√°ch t√≠nh ƒëi·ªÉm trung b√¨nh?',
            'Quy ƒë·ªãnh v·ªÅ ƒë·ªì √°n t·ªët nghi·ªáp',
            'Th·ªß t·ª•c chuy·ªÉn ng√†nh h·ªçc',
            'H·ªçc b·ªïng d√†nh cho sinh vi√™n'
          ].map((question, index) => (
            <button
              key={index}
              onClick={() => onSendMessage(question)}
              className="px-3 py-1.5 lg:px-4 lg:py-2 bg-gray-100 hover:bg-red-50 text-gray-700 hover:text-red-600 rounded-full text-xs sm:text-sm transition-all duration-200 border border-transparent hover:border-red-200"
            >
              {question}
            </button>
          ))}
        </div>
      </div>

      {/* Footer info */}
      <div className="text-center text-xs sm:text-sm text-gray-500 mb-4">
        <p>üí° M·∫πo: B·∫°n c√≥ th·ªÉ nh·∫≠p c√¢u h·ªèi b·∫±ng gi·ªçng n√≥i ho·∫∑c g√µ tr·ª±c ti·∫øp</p>
      </div>

    </div>
  );
};

export default WelcomeScreen;
